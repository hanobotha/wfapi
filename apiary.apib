FORMAT: 1A
HOST: http://platform/

# Workflow Management

API to manage Workflows and Workflows instances.

## Primed Workflow Collection [/api/primedworkflows/{?skip,limit}]
A primed workflow represents the combination of a workflow definition and any arguments required to run the workflow
Example: A workflow 'GetAllMailboxes' has been defined. It takes a tenant Id as a parameter. 
A primed workflow would be the combination of the 'GetAllMailboxes' workflow and the an argument for the parameter(tenandId = {xyz}).
   

### List All Primed Workflows [GET]

+ Parameters
    + skip(optional) - number of records to skipe for this page
    + limit(optional) - number of records to inclued in this page

+ Response 200 (application/json)
        
        {
            "items":[
                {
                    "id": "{id}",
                    "configurationName": "ExampleName",
                    "arguments": [ 
                        {
                            "name" : "ExampleParameterName",
                            "stateName" : "ExampleStateName",
                            "value"" : "Free form Json token"
                        }
                    ]
                    "_links":{
                        "self": "http://platform/api/primedworkflows/94BC55CE-0A4F-4E96-9988-000956DA831A",
                        "workflow": "http://platform/api/workflows/WorkflowNameExample",
                    }
                }
            ],
            "_links":{
                "previousPage": "http://platform/api/primedworkflows?skip=100&limit=50"
                "nextPage": "http://platform/api/primedworkflows?skip=200&limit=50"
            }
        }

### Prime a workflow [POST]

To prime a workflow is to combine a workflow definition by name with an argument for its required parameters. 

+ Request (application/json)

        {
            "workflowName": "ExampleWorkflow",
            "arguments": [
                {
                    "name": "ExampleTenantId",
                    "stateName": "ExampleStateName",
                    "Value":"ExampleValue"
                }
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: api/primedworkflows/id

    + Body

            {
                "id": "{id}",
                "configurationName": "ExampleName",
                "arguments": : "ExampleArguments",
                "_links":{
                    "self": "http://platform/api/primedworkflows/94BC55CE-0A4F-4E96-9988-000956DA831A",
                    "workflow": "http://platform/api/workflows/WorkflowNameExample"
                }
            }

## Primed Workflows [/api/primedworkflows/{id}]
A primed workflow represents the combination of a workflow definition and any arguments required to run the workflow

### Get a specific instance of a Primed Workflow [GET]
+ Parameters
    + id - Valid URL id of instance

+ Response 200 (application/json)

        [
            {
                "id": "{94BC55CE-0A4F-4E96-9988-000956DA831A}",
                "configurationName": "ExampleName",
                "arguments": : "ExampleArguments",
                "_links":{
                    "self": "http://platform/api/primedworkflows/{id}",
                    "workflow": "http://platform/api/workflows/WorkflowNameExample"
                }
            }
        ]


### Update a specific instance of a Primed Workflows [PUT]
Updating a primed workflow is only allowed before a primed workflow is started.
A primed workflow can only be updated by supplying alternative arguments for it's parameters

+ Parameters
    + id - A path variable that is required for a valid URL

+ Request (application/json)

        {
            "arguments": [
                {
                    "name": "ExampleTenantId",
                    "stateName": "ExampleStateName",
                    "Value":"AlternativeExampleValue"
                }
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/id

    + Body

            {
                "id": "{id}",
                "configurationName": "ExampleName",
                "arguments": : "ExampleArguments",
                "_links":{
                    "self": "http://platform/api/primedworkflows/94BC55CE-0A4F-4E96-9988-000956DA831A",
                    "workflow": "http://platform/api/workflows/WorkflowNameExample"
                }
            }


## Workflow Instance Collection [/api/workflowinstances/{?skip,limit}]
A workflow instance is a running workflow. 
 
### List All Workflow Instance [GET]

+ Parameters
    + skip(optional) - number of records to skipe for this page
    + limit(optional) - number of records to inclued in this page

+ Response 200 (application/json)
        
        {
            "items":[
                {
                    "id": "{D9430D11-FCD5-46DC-BFA1-04232C8679F8}",
                    "name": "ExampleName",
                    "state": "ExampleState",
                    "parentId": "null",
                    "parentState": "null",
                    "modified": "ISO Datetime example",
                    "_links":{
                        "self": "http://platform/api/workflowinstances/D9430D11-FCD5-46DC-BFA1-04232C8679F8",
                        "workflow": "http://platform/api/workflows/WorkflowNameExample",
                        "configuredWorkflow": "http://platform/api/configuredworkflows/94BC55CE-0A4F-4E96-9988-000956DA831A",
                        "monitor": "http://platform/monitors/api/D9430D11-FCD5-46DC-BFA1-04232C8679F8"
                    }
                }
            ],
            "_links":{
                "previousPage": "http://platform/workflowinstances?skip=100&limit=50"
                "nextPage": "http://platform/workflowinstances?skip=200&limit=50"
            }
        }
            

### Create a Workflow Instance [POST]
The following call creates a workflow instance

+ Request (application/json)

        {
            "configuredWorkflowId": "configuredWorkflowId",
            "parameters": [
                {
                    "Parameter1": "Parameter1Value",
                    "Parameter2": "Parameter2Value",
                }
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: api/workflowinstances/{id}

    + Body

            {
                "id": "{D9430D11-FCD5-46DC-BFA1-04232C8679F8}",
                "name": "ExampleName",
                "state": "ExampleState",
                "parentId": "null",
                "parentState": "null",
                "modified": "ISO Datetime example",
                "_links":{
                    "self": "http://platform/workflowinstances/D9430D11-FCD5-46DC-BFA1-04232C8679F8",
                    "workflow": "http://platform/workflows/WorkflowNameExample",
                    "configuredWorkflow": "http://platform/configuredworkflows/94BC55CE-0A4F-4E96-9988-000956DA831A",
                    "monitor": "http://platform/monitors/D9430D11-FCD5-46DC-BFA1-04232C8679F8"
                }
            }

### Update a Workflow Instance [PUT]
The following call will stop/restart/pause a workflow instance

+ Request (application/json)

        {
            "command": "stop/restart/pause",
        }

+ Response 201 (application/json)

    + Headers

            Location: api/workflowinstances/{id}

    + Body

            {
                "id": "{D9430D11-FCD5-46DC-BFA1-04232C8679F8}",
                "name": "ExampleName",
                "state": "ExampleState",
                "parentId": "null",
                "parentState": "null",
                "modified": "ISO Datetime example",
                "_links":{
                    "self": "http://platform/workflowinstances/D9430D11-FCD5-46DC-BFA1-04232C8679F8",
                    "workflow": "http://platform/workflows/WorkflowNameExample",
                    "configuredWorkflow": "http://platform/configuredworkflows/94BC55CE-0A4F-4E96-9988-000956DA831A",
                    "monitor": "http://platform/monitors/D9430D11-FCD5-46DC-BFA1-04232C8679F8"
                }
            }


## Workflow Monitoring Collection [/api/monitors/{?skip,limit}]
The following endpoint should be used to monitor running workflows

### List All Workflow Monitors [GET]

+ Parameters
    + skip(optional) - number of records to skipe for this page
    + limit(optional) - number of records to inclued in this page

+ Response 200 (application/json)
        
        {
            "items":[
                {
                    "id": "{id}",
                    "runningState": "Running",
                    "currentState": "Step1",
                    "_links":{
                        "self": "http://platform/api/monitors/{workflowInstanceId}",
                        "workflow": "http://platform/api/workflows/{workflowName}",
                        "configuredWorkflow": "http://platform/api/configuredworkflows/{configuredId}",
                        "workflowInstance": "http://platform/api/workflowInstance/{workflowInstanceId}",
                        "result":{
                            "href":"http://platform/api/results/{workflowInstanceId}/{stepId}"
                            "numberOfItems":10
                        }
                    }
                }
            ],
            "_links":{
                "previousPage": "http://platform/monitors?skip=100&limit=50"
                "nextPage": "http://platform/monitors?skip=200&limit=50"
            }
        }
            


## Monitoring a single Workflow [/api/monitors/{workflowInstanceId}]

### Monitor Workflow [GET]
+ Response 200 (application/json)
        
        {
            "id": "{workflowInstanceId}",
            "runningState": "Running",
            "currentStep": "Step1",
            "currentStepId": "{stepId}",
            "_links":{
                "self": "http://platform/monitors/{workflowInstanceId}",
                "workflow": "http://platform/workflows/{workflowName}",
                "configuredWorkflow": "http://platform/configuredworkflows/{configuredId}",
                "workflowInstance": "http://platform/workflowInstance/{workflowInstanceId}",
                "result":{
                    "href":"http://platform/results/{workflowInstanceId}?stepId={stepId}"
                    "numberOfItems":10
                }
            }
        }

## Workflow Result [/api/result/{workflowInstanceId}/{?stepId,skip,limit}]
Execute the following call to get the results as generated by a step in the workflow.
The schema of the objects will be defined on the configuration of the workflow. 
The full object will be contained in the item key. 
(The sequence of items cannot be guaranteed)  

### Get Workflow Step Results [GET]

+ Response 200 (application/json)

        {
            "items":[
                {
                    "index": 150,
                    "item":{}
                },
                {
                    "index": 151,
                    "item":{}
                },
            ],
            "_links":{
                "previousPage": "http://platform//api/result/{workflowInstanceId}?stepId={stepId}&skip=100&limit=50"
                "nextPage":  "http://platform//api/result/{workflowInstanceId}?stepId={stepId}&skip=200&limit=50"
            }
        }